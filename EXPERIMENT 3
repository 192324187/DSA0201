# Step 1: Install necessary libraries if not already installed
!pip install opencv-python-headless numpy matplotlib

# Step 2: Import necessary libraries
import cv2
import numpy as np
import matplotlib.pyplot as plt
from google.colab import files

# Step 3: Upload an image
uploaded = files.upload()

# Step 4: Read the uploaded image
image_path = next(iter(uploaded))  # Get the uploaded file's name
image = cv2.imread(image_path)

# Step 5: Convert the image to grayscale
gray_image = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)

# Step 6: Apply Canny edge detection
edges = cv2.Canny(gray_image, 100, 200)

# Step 7: Display the original and edge-detected images
plt.figure(figsize=(10,5))

# Display the original image
plt.subplot(1, 2, 1)
plt.imshow(cv2.cvtColor(image, cv2.COLOR_BGR2RGB))  # Convert BGR to RGB for correct color display
plt.title('Original Image')
plt.axis('off')

# Display the Canny edge-detected image
plt.subplot(1, 2, 2)
plt.imshow(edges, cmap='gray')
plt.title('Canny Edge Detection')
plt.axis('off')

plt.show()

# Step 8: Save the edge-detected image (optional)
cv2.imwrite('edges_image.png', edges)

# Step 9: Optionally, allow the user to download the edge-detected image
files.download('edges_image.png')
